name: Libretro

on:
  push:
    branches: [ "develop", "edge", "release" ]
  pull_request:
    branches: [ "develop" ]

  workflow_dispatch:

env:
  VXT_VERSION: 1.4.0
  ODIN_VERSION: dev-2025-02
  NDK_VERSION: r27c

jobs:
  linux-amd64-build:
    name: Build (Linux AMD64)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          rm -rf odin; mkdir odin
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default && unzip butler.zip -d butler
          curl -L -o odin.zip https://github.com/odin-lang/Odin/releases/download/${ODIN_VERSION}/odin-linux-amd64-${ODIN_VERSION}.zip && unzip odin.zip
          echo "${GITHUB_WORKSPACE}/butler" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/odin-linux-amd64-${ODIN_VERSION}" >> $GITHUB_PATH

      - name: Test
        run: make tests
        
      - name: Build
        run: make release

      - name: Deploy
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          if [[ $GITHUB_REF_NAME =~ ^(edge|release)$ ]]; then
            PACKAGE="${GITHUB_WORKSPACE}/package"
            rm -rf $PACKAGE
            mkdir $PACKAGE
            cp virtualxt_libretro.so $PACKAGE
            cp virtualxt_libretro.info $PACKAGE
            butler login
            butler push $PACKAGE phix/virtualxt:linux-amd64-${GITHUB_REF_NAME} --userversion ${VXT_VERSION}-${GITHUB_RUN_ID}
          fi

  windows-amd64-build:
    name: Build (Windows AMD64)
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          rm -rf odin
          curl -L -o butler.zip https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default && 7z x butler.zip -obutler
          curl -L -o odin.zip https://github.com/odin-lang/Odin/releases/download/${ODIN_VERSION}/odin-windows-amd64-${ODIN_VERSION}.zip && 7z x odin.zip
          echo "${GITHUB_WORKSPACE}/butler" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/odin-windows-amd64-${ODIN_VERSION}" >> $GITHUB_PATH

      - name: Build
        run: "${GITHUB_WORKSPACE}/Makefile.bat"
        
      - name: Deploy
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          if [[ $GITHUB_REF_NAME =~ ^(edge|release)$ ]]; then
            PACKAGE="${GITHUB_WORKSPACE}/package"
            rm -rf $PACKAGE
            mkdir $PACKAGE
            cp virtualxt_libretro.dll $PACKAGE
            cp virtualxt_libretro.info $PACKAGE
            butler login
            butler push $PACKAGE phix/virtualxt:windows-amd64-${GITHUB_REF_NAME} --userversion ${VXT_VERSION}-${GITHUB_RUN_ID}
          fi

  macos-amd64-build:
    name: Build (MacOS AMD64)
    if: false
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          rm -rf odin; mkdir odin
          curl -L -o butler.zip https://broth.itch.ovh/butler/darwin-amd64/LATEST/archive/default && unzip butler.zip -d butler
          curl -L -o odin.zip https://github.com/odin-lang/Odin/releases/download/${ODIN_VERSION}/odin-macos-amd64-${ODIN_VERSION}.zip && unzip odin.zip
          echo "${GITHUB_WORKSPACE}/butler" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/odin-macos-amd64-${ODIN_VERSION}" >> $GITHUB_PATH

      - name: Test
        run: make tests
        
      - name: Build
        run: make release

      - name: Deploy
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          if [[ $GITHUB_REF_NAME =~ ^(edge|release)$ ]]; then
            PACKAGE="${GITHUB_WORKSPACE}/package"
            rm -rf $PACKAGE
            mkdir $PACKAGE
            cp virtualxt_libretro.dylib $PACKAGE
            cp virtualxt_libretro.info $PACKAGE
            butler login
            butler push $PACKAGE phix/virtualxt:macos-amd64-${GITHUB_REF_NAME} --userversion ${VXT_VERSION}-${GITHUB_RUN_ID}
          fi

  macos-arm64-build:
    name: Build (MacOS ARM64)
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          rm -rf odin; mkdir odin
          curl -L -o butler.zip https://broth.itch.ovh/butler/darwin-amd64/LATEST/archive/default && unzip butler.zip -d butler
          curl -L -o odin.zip https://github.com/odin-lang/Odin/releases/download/${ODIN_VERSION}/odin-macos-arm64-${ODIN_VERSION}.zip && unzip odin.zip
          echo "${GITHUB_WORKSPACE}/butler" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/odin-macos-arm64-${ODIN_VERSION}" >> $GITHUB_PATH

      - name: Test
        run: make tests
        
      - name: Build
        run: make release

      - name: Deploy
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          if [[ $GITHUB_REF_NAME =~ ^(edge|release)$ ]]; then
            PACKAGE="${GITHUB_WORKSPACE}/package"
            rm -rf $PACKAGE
            mkdir $PACKAGE
            cp virtualxt_libretro.dylib $PACKAGE
            cp virtualxt_libretro.info $PACKAGE
            butler login
            butler push $PACKAGE phix/virtualxt:macos-arm64-${GITHUB_REF_NAME} --userversion ${VXT_VERSION}-${GITHUB_RUN_ID}
          fi
         
  android-arm64-build:
    name: Build (Android ARM64)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          rm -rf odin; mkdir odin
          curl -L -o ndk.zip https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux.zip && unzip ndk.zip
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default && unzip butler.zip -d butler
          curl -L -o odin.zip https://github.com/odin-lang/Odin/releases/download/${ODIN_VERSION}/odin-linux-amd64-${ODIN_VERSION}.zip && unzip odin.zip
          echo "${GITHUB_WORKSPACE}/butler" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/odin-linux-amd64-${ODIN_VERSION}" >> $GITHUB_PATH

      - name: Test
        run: make tests

      - name: Build
        run: |
          make clean
          CC="${GITHUB_WORKSPACE}/android-ndk-${NDK_VERSION}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" make android
          
      - name: Deploy
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          if [[ $GITHUB_REF_NAME =~ ^(edge|release)$ ]]; then
            PACKAGE="${GITHUB_WORKSPACE}/package"
            rm -rf $PACKAGE
            mkdir $PACKAGE
            cp virtualxt_libretro.so $PACKAGE
            cp virtualxt_libretro.info $PACKAGE
            butler login
            butler push "${GITHUB_WORKSPACE}/package" phix/virtualxt:android-arm64-${GITHUB_REF_NAME} --userversion ${VXT_VERSION}-${GITHUB_RUN_ID}
          fi
